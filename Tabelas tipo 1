
DROP DATABASE bibliotech;

CREATE DATABASE  bibliotech;
USE bibliotech;

CREATE TABLE estabelecimento
(
		ID_estabelecimento int unsigned not null auto_increment,
        estado varchar(50) not null,
        bairro varchar(200) not null,
        endereço varchar(400) not null,
        nome varchar(100) not null default 'biblioteca',
        PRIMARY KEY (ID_estabelecimento)
);

CREATE TABLE consumivel
(
		ID_Consumivel int unsigned not null auto_increment,
        preco double not null,
        PRIMARY KEY (ID_Consumivel)
);

CREATE TABLE tiposConsumivel
(
		FK_ID_Consumivel int unsigned not null,
		ID_TipoConsumivel int unsigned not null auto_increment,
        bebidas varchar(50) not null,
        comidas varchar(50) not null,
        jogos varchar(50) not null,
        filmes varchar(50) not null,
        prlucia varchar(50) not null,
        PRIMARY KEY (ID_TipoConsumivel),
        CONSTRAINT FK_Consumivel_TipoConsumivel FOREIGN KEY (FK_ID_Consumivel) REFERENCES consumivel(ID_Consumivel)
);

CREATE TABLE cliente
(
		ID_Cliente int unsigned auto_increment,
        CPF varchar(15) not null,
        nome varchar(100) not null,
        dataNasc varchar(10) not null,
        PRIMARY KEY (ID_Cliente)
);

CREATE TABLE autor
(
		ID_Autor int unsigned auto_increment,
        nacionalidade varchar(100) not null,
        nome varchar(100) not null,
        dataNasc varchar(10) not null,
        PRIMARY KEY (ID_Autor)
);

CREATE TABLE endereco
(
	ID_Endereco int unsigned not null auto_increment,
    municipio varchar(100) not null default '',
    estado varchar(100) not null default '',
    cidade varchar(100) not null default '',
    CEP varchar(10) not null default '',
    complemento varchar(100) not null default '',
    numero int unsigned not null,
    FK_ID_Cliente int unsigned not null,
    logradouro varchar(100) not null default '',
    PRIMARY KEY(ID_Endereco),
    CONSTRAINT FK_Cliente_Endereco FOREIGN KEY (FK_ID_Cliente) REFERENCES cliente(ID_Cliente) 
);

CREATE TABLE telefone
(
	ID_Telefone int unsigned not null auto_increment,
    telefone int unsigned not null,
    FK_ID_Cliente int unsigned not null,
    PRIMARY KEY(ID_Telefone),
    CONSTRAINT FK_Cliente_Telefone FOREIGN KEY (FK_ID_Cliente) REFERENCES cliente(ID_Cliente) 
);

CREATE TABLE compra
(
	ID_Compra int unsigned not null auto_increment,
    valor int unsigned not null,
    data varchar(10) not null default '',
    FK_ID_Estabelecimento int unsigned not null,
    PRIMARY KEY(ID_Compra),
    CONSTRAINT FK_Estabelecimento_Compra FOREIGN KEY (FK_ID_Estabelecimento) REFERENCES estabelecimento(ID_Estabelecimento) 
);

CREATE TABLE clientecompra
(
ID_ClienteCompra int unsigned not null auto_increment,
FK_ID_Cliente int unsigned not null,
FK_ID_Compra int unsigned not null,
PRIMARY KEY(ID_ClienteCompra),
CONSTRAINT FK_ID_Cliente_ClienteCompra FOREIGN KEY ( FK_ID_Cliente ) REFERENCES cliente(ID_Cliente),
CONSTRAINT FK_ID_Compra_ClienteCompra FOREIGN KEY ( FK_ID_Compra ) REFERENCES compra(ID_Compra)
);


CREATE TABLE livros
(
ID_Livro int unsigned not null auto_increment,
FK_ID_Cliente int unsigned not null,
editora varchar(50) not null,
ano_lanc varchar(10) not null,
titulo varchar(50) not null default '',
PRIMARY KEY(ID_Livro),
CONSTRAINT FK_ID_Cliente_Livro FOREIGN KEY ( FK_ID_Cliente ) REFERENCES cliente(ID_Cliente)
);

CREATE TABLE tipogenero
(
ID_TipoGenero int unsigned not null auto_increment,
FK_ID_Livro int unsigned not null,
acao boolean not null,
gastronomia boolean not null,
ficcao_cientifica boolean not null,
infantil boolean not null,
fantasia boolean not null,
religioso boolean not null,
romance boolean not null,
novela boolean not null,
suspense boolean not null,
horror boolean not null,
aventura boolean not null,
PRIMARY KEY(ID_TipoGenero),
CONSTRAINT FK_ID_Livro_TipoGenero FOREIGN KEY ( FK_ID_Livro ) REFERENCES livros(ID_Livro)
);

CREATE TABLE autorlivros
(
		ID_AutorLivros int unsigned auto_increment,
  		FK_ID_Autor int unsigned not NULL,
  		fk_ID_Livros int unsigned not NULL,
        PRIMARY KEY (ID_AutorLivros),
  		CONSTRAINT FK_ID_AL_Livros FOREIGN KEY ( FK_ID_Livros ) REFERENCES livros(ID_Livro),
    	CONSTRAINT FK_ID_AL_Autor FOREIGN KEY ( FK_ID_Autor ) REFERENCES autor(ID_Autor)
);

CREATE TABLE funcionario
(
		ID_Funcionario int unsigned  auto_increment,
        salario int unsigned not null,
        datanasc varchar(10) not null,
        sexo varchar(5) not null,
        nome varchar(100) not null default 'funcionario',
  		FK_ID_Estabelecimento int unsigned not NULL,
        PRIMARY KEY (ID_Funcionario),
        CONSTRAINT FK_ID_Estabelecimento_Funcionario FOREIGN KEY (FK_ID_Estabelecimento) REFERENCES estabelecimento(ID_Estabelecimento)
);

CREATE TABLE colaborador
(
		ID_Colaborador int unsigned  auto_increment,
        tipo varchar(20) not null,
        estado varchar(50) not null,
        endereço varchar(200) not null,
  		FK_ID_Estabelecimento int unsigned not NULL,
        PRIMARY KEY (ID_Colaborador),
  		CONSTRAINT FK_ID_Estabelecimento_Colaborador FOREIGN KEY (FK_ID_Estabelecimento) REFERENCES estabelecimento(ID_Estabelecimento) 
);

CREATE TABLE custos
(
		ID_Custos int unsigned  auto_increment,
        custosTotais double not null,
  		FK_ID_Estabelecimento int unsigned not NULL,
  		FK_ID_Consumivel int unsigned not NULL,
        PRIMARY KEY (ID_Custos),
  		CONSTRAINT FK_Estabelecimento_Custos FOREIGN KEY (FK_ID_Estabelecimento) REFERENCES estabelecimento(ID_Estabelecimento),
  		CONSTRAINT FK_Consumivel_Custos FOREIGN KEY (FK_ID_Consumivel) REFERENCES consumivel(ID_Consumivel)
);

CREATE TABLE tipocustos
(
ID_TipoCusto int unsigned auto_increment,
FK_ID_Custos int unsigned not null,
funcionario double not null,
estoque double not null,
aluguel double not null,
luz double not null,
agua double not null,
PRIMARY KEY(ID_TipoCusto),
CONSTRAINT FK_ID_TC_TipoCustos FOREIGN KEY ( FK_ID_Custos ) REFERENCES custos(ID_Custos)
);
UPDATE estabelecimento SET estado = 'RJ' WHERE ID_estabelecimento = 1;
UPDATE estabelecimento SET bairro = 'Ipanema' WHERE ID_estabelecimento = 2;
UPDATE estabelecimento SET nome = 'Boteco Belmonte' WHERE ID_estabelecimento = 3;
UPDATE estabelecimento SET endereço = 'Av. Vieira Souto, 236' WHERE ID_estabelecimento = 4;
UPDATE estabelecimento SET estado = 'SP', bairro = 'Santo Amaro', nome = 'Mc Donalds', endereço = 'SP-015' WHERE ID_estabelecimento = 5;

UPDATE consumivel SET preco = 18.99 WHERE ID_Consumivel = 1;
UPDATE consumivel SET preco = 2.49 WHERE ID_Consumivel = 2;
UPDATE consumivel SET preco = 25.50 WHERE ID_Consumivel = 3;
UPDATE consumivel SET preco = 2600.00 WHERE ID_Consumivel = 4;
UPDATE consumivel SET preco = 16.99 WHERE ID_Consumivel = 5;

UPDATE tiposConsumivel SET bebidas = 'Refrigerante' WHERE FK_ID_Consumivel = 1;
UPDATE tiposConsumivel SET filmes = 'Terror' WHERE FK_ID_Consumivel = 4;
UPDATE tiposConsumivel SET prlucia = 'Jogos de Tabuleiro' WHERE FK_ID_Consumivel = 5;
UPDATE tiposConsumivel SET bebidas = 'Energético' WHERE FK_ID_Consumivel = 7;
UPDATE tiposConsumivel SET comidas = 'Vegano' WHERE FK_ID_Consumivel = 9;

UPDATE cliente SET nome = 'Rogério Tergolina' WHERE ID_Cliente = 1;
UPDATE cliente SET dataNasc = '09/01/1983' WHERE ID_Cliente = 3;
UPDATE cliente SET CPF = '427.819.356-23' WHERE ID_Cliente = 5;
UPDATE cliente SET nome = 'Leandro da Silva' WHERE ID_Cliente = 7;
UPDATE cliente SET dataNasc = '15/05/2002' WHERE ID_Cliente = 9;

DELETE FROM estabelecimento WHERE ID_estabelecimento = 6;
DELETE FROM estabelecimento WHERE ID_estabelecimento = 8;
DELETE FROM estabelecimento WHERE ID_estabelecimento = 9;
DELETE FROM estabelecimento WHERE ID_estabelecimento = 10;

DELETE FROM consumivel WHERE ID_Consumivel = 6;
DELETE FROM consumivel WHERE ID_Consumivel = 7;
DELETE FROM consumivel WHERE ID_Consumivel = 8;
DELETE FROM consumivel WHERE ID_Consumivel = 9;
DELETE FROM consumivel WHERE ID_Consumivel = 10;

DELETE FROM tiposConsumivel WHERE FK_ID_Consumivel = 6;
DELETE FROM tiposConsumivel WHERE FK_ID_Consumivel = 7;
DELETE FROM tiposConsumivel WHERE FK_ID_Consumivel = 8;
DELETE FROM tiposConsumivel WHERE FK_ID_Consumivel = 9;
DELETE FROM tiposConsumivel WHERE FK_ID_Consumivel = 10;

DELETE FROM cliente WHERE ID_Cliente = 2;
DELETE FROM cliente WHERE ID_Cliente = 4;
DELETE FROM cliente WHERE ID_Cliente = 6;
DELETE FROM cliente WHERE ID_Cliente = 8;
DELETE FROM cliente WHERE ID_Cliente = 10;

/*
SELECT 
*/
INSERT INTO cliente
( CPF, nome, dataNasc)
VALUES
('785.985.335-25', 'Roger Guedes', '25/09/1994');

INSERT INTO cliente
( CPF, nome, dataNasc)
VALUES
('785.985.000-25', 'Tiquinho Suares', '18/07/1997');

INSERT INTO cliente
( CPF, nome, dataNasc)
VALUES
('888.987.154-01', 'Suares Lima', '25/10/1990');

INSERT INTO cliente
( CPF, nome, dataNasc)
VALUES
('785.985.745-88', 'Leandro Guedes', '24/09/1994');

INSERT INTO cliente
( CPF, nome, dataNasc)
VALUES
('785.922.285-25', 'Gabriel Jesus', '08/02/1998');

INSERT INTO cliente
( CPF, nome, dataNasc)
VALUES
('584.859.669-08', 'Matheus Campos', '20/12/2005');
INSERT INTO cliente
( CPF, nome, dataNasc)
VALUES
('785.987.335-25', 'Lima Pereira', '19/11/2006');
INSERT INTO cliente
( CPF, nome, dataNasc)
VALUES
('432.978.115-77', 'Maria Fernanda', '06/04/2004');
INSERT INTO cliente
( CPF, nome, dataNasc)
VALUES
('154.850.005.84', 'Roger Guedes de Santos', '25/09/1984');
INSERT INTO cliente
( CPF, nome, dataNasc)
VALUES
('454.235.455-23', 'Gabriel Alves', '05/10/2002');

/*
INSERT estabelecimento
*/
INSERT INTO estabelecimento
(ID_estabelecimento, estado, bairro, endereço, nome)
VALUES
(1, 'SP', 'Mooca', 'Rua Japones, 25', 'Bibliotech');

INSERT INTO estabelecimento
(ID_estabelecimento, estado, bairro, endereço, nome)
VALUES
(2, 'SP', 'Santo Amaro', 'Rua Juliano Peixoto, 1155', 'Bibliotech');

INSERT INTO estabelecimento
(ID_estabelecimento, estado, bairro, endereço, nome)
VALUES
(3, 'SP', 'Alphaville', 'Rua Borges Zanneti, 0054', 'Bibliotech');

INSERT INTO estabelecimento
(ID_estabelecimento, estado, bairro, endereço, nome)
VALUES
(4, 'RJ', 'Fluminense', 'Rua Namili , 5422', 'Bibliotech');

INSERT INTO estabelecimento
(ID_estabelecimento, estado, bairro, endereço, nome)
VALUES
(5, 'RJ', 'Flamengo', 'Rua Pereido de Castro, 15', 'Bibliotech');

INSERT INTO estabelecimento
(ID_estabelecimento, estado, bairro, endereço, nome)
VALUES
(6, 'MG', 'Timinhamguá', 'Rua Azevedo Neto, 158', 'Bibliotech');

INSERT INTO estabelecimento
(ID_estabelecimento, estado, bairro, endereço, nome)
VALUES
(7, 'RS', 'Santana', 'Rua Castro Alves, 874', 'Bibliotech');

INSERT INTO estabelecimento
(ID_estabelecimento, estado, bairro, endereço, nome)
VALUES
(8, 'RS', 'Jardim Botânico', 'Rua Castro Alves, 774', 'Bibliotech');


INSERT INTO estabelecimento
(ID_estabelecimento, estado, bairro, endereço, nome)
VALUES
(9, 'AM', 'Jardins', 'Rua Alves, 774', 'Bibliotech');

INSERT INTO estabelecimento
(ID_estabelecimento, estado, bairro, endereço, nome)
VALUES
(10, 'BA', 'Meu Rei', 'Rua Alves de Santana, 8474', 'Bibliotech');

/*
SELECT consumivel
*/
INSERT INTO consumivel
(preco)
VALUES
(15.99);

INSERT INTO consumivel
(preco)
VALUES
(1.99);

INSERT INTO consumivel
(preco)
VALUES
(20.00);

INSERT INTO consumivel
(preco)
VALUES
(2500.00);

INSERT INTO consumivel
(preco)
VALUES
(15.99);

INSERT INTO consumivel
(preco)
VALUES
(19.99);

INSERT INTO consumivel
(preco)
VALUES
(9.99);

INSERT INTO consumivel
(preco)
VALUES
(150.59);

INSERT INTO consumivel
(preco)
VALUES
(1854.00);

INSERT INTO consumivel
(preco)
VALUES
(10.00);


